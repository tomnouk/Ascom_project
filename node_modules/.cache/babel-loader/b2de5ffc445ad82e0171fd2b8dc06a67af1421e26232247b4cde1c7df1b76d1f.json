{"ast":null,"code":"var _jsxFileName = \"/Users/anoukmournard/Documents/ascom/level_4/edit_grid/src/PatientGridSort.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PatientGridSort = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [showSortMenu, setShowSortMenu] = useState(null);\n  const [sortOption, setSortOption] = useState({});\n  const [isEditDialogOpen, setEditDialogOpen] = useState(false);\n  const [editData, setEditData] = useState({\n    familyName: \"\",\n    givenName: \"\",\n    sex: \"\"\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-GB\");\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const username = \"test\";\n      const password = \"TestMePlease!\";\n      const encodedCredentials = btoa(`${username}:${password}`);\n      try {\n        const response = await axios.get(\"https://mobile.digistat.it/CandidateApi/Patient/GetList\", {\n          headers: {\n            Authorization: `Basic ${encodedCredentials}`\n          }\n        });\n        //console.log(\"Data retrieved:\", response.data);\n        setData(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n        setError(\"Unable to fetch data.\");\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const openEditDialog = patient => {\n    setSelectedPatient(null);\n    setEditData({\n      id: patient.id,\n      familyName: patient.familyName,\n      givenName: patient.givenName,\n      sex: patient.sex\n    });\n    setEditDialogOpen(true);\n  };\n  const closeEditDialog = () => {\n    setEditDialogOpen(false);\n  };\n  const openPatientDetails = patient => {\n    setEditDialogOpen(false);\n    setSelectedPatient(patient);\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditData({\n      ...editData,\n      [name]: value\n    });\n  };\n  const saveEditData = async () => {\n    const username = \"test\";\n    const password = \"TestMePlease!\";\n    const encodedCredentials = btoa(`${username}:${password}`);\n    try {\n      const response = await axios.post(\"https://mobile.digistat.it/CandidateApi/Patient/Update\", editData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Basic ${encodedCredentials}`\n        }\n      });\n      if (response.status === 200) {\n        alert(\"Patient data updated successfully!\");\n        setData(prevData => prevData.map(patient => patient.id === editData.id ? {\n          ...patient,\n          ...editData\n        } : patient));\n        closeEditDialog();\n      } else {\n        alert(\"Failed to update patient data.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating patient data:\", error);\n      alert(\"An error occurred while updating the patient data.\");\n    }\n  };\n  const columns = React.useMemo(() => [{\n    Header: \"Family Name\",\n    accessor: \"familyName\"\n  }, {\n    Header: \"Given Name\",\n    accessor: \"givenName\"\n  }, {\n    Header: \"Sex\",\n    accessor: \"sex\",\n    Cell: ({\n      value\n    }) => value === \"M\" ? \"M\" : \"F\"\n  }, {\n    Header: \"Birth Date\",\n    accessor: \"birthDate\",\n    Cell: ({\n      value\n    }) => formatDate(value)\n  }, {\n    Header: \"Parameters\",\n    accessor: \"parameters\",\n    Cell: ({\n      row\n    }) => {\n      const parameters = row.original.parameters || [];\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"parameters-button\",\n        onClick: () => openPatientDetails(row.original),\n        children: [parameters.length, \" parameters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this);\n    }\n  }, {\n    Header: \"Alarm\",\n    accessor: \"alarm\",\n    Cell: ({\n      row\n    }) => {\n      const parameters = row.original.parameters || [];\n      const hasAlarm = parameters.some(param => param.alarm === true);\n      return hasAlarm ? \"ðŸ”´\" : \"No alarm\";\n    }\n  }, {\n    Header: \"Edit\",\n    accessor: \"edit\",\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"parameters-button\",\n      onClick: () => openEditDialog(row.original),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }, this)\n  }], []);\n  const filteredData = React.useMemo(() => {\n    const searchLower = searchTerm.trim().toLowerCase();\n    const searchWords = searchLower.split(\" \");\n    return data.filter(patient => {\n      return searchWords.every(word => patient.familyName.toLowerCase().includes(word) || patient.givenName.toLowerCase().includes(word) || formatDate(patient.birthDate).includes(word) || patient.sex.toLowerCase().includes(word));\n    });\n  }, [data, searchTerm]);\n  const tableInstance = useTable({\n    columns,\n    data: filteredData\n  }, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 16\n    }, this);\n  }\n  const handleSortChange = (columnId, desc) => {\n    tableInstance.toggleSortBy(columnId, desc);\n    setSortOption({\n      columnId,\n      desc\n    });\n    setShowSortMenu(null);\n  };\n  const hasAlarm = patient => {\n    return patient.parameters && patient.parameters.some(param => param.alarm === true);\n  };\n  const clearSearch = () => {\n    setSearchTerm(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PatientGrid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name, or birth date\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-button\",\n        onClick: clearSearch,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: \"relative\"\n                },\n                onMouseEnter: () => column.id !== \"edit\" && setShowSortMenu(column.id),\n                onMouseLeave: () => column.id !== \"edit\" && setShowSortMenu(null),\n                children: [column.render(\"Header\"), showSortMenu === column.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sort-menu show\",\n                  children: [column.id === \"sex\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, true),\n                      children: \"Sex M\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, false),\n                      children: \"Sex F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true), column.id === \"birthDate\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, true),\n                      children: \"Born earliest\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, false),\n                      children: \"Born latest\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true), column.id === \"alarm\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, true),\n                      children: \"Alarm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, false),\n                      children: \"No alarm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true), (column.id === \"familyName\" || column.id === \"givenName\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, false),\n                      children: \"Sort A-Z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, true),\n                      children: \"Sort Z-A\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true), column.id === \"parameters\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, false),\n                      children: \"Sort By Asc\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleSortChange(column.id, true),\n                      children: \"Sort By Desc\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 41\n              }, this)\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this))\n          }, headerGroup.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.length > 0 ? rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, cell.column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 45\n              }, this))\n            }, row.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 37\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"\\xA0\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), selectedPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Family Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 24\n        }, this), \" \", selectedPatient.familyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Given Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 24\n        }, this), \" \", selectedPatient.givenName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sex:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 24\n        }, this), \" \", selectedPatient.sex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Birth Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 24\n        }, this), \" \", formatDate(selectedPatient.birthDate)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"parameters-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Alarm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedPatient.parameters && selectedPatient.parameters.map((param, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: param.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: param.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: param.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: param.alarm ? \"ðŸ”´\" : \"No alarm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"closeButton\",\n        onClick: () => setSelectedPatient(null),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }, this), isEditDialogOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Family Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"familyName\",\n            value: editData.familyName,\n            onChange: handleEditChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Given Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"givenName\",\n            value: editData.givenName,\n            onChange: handleEditChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Sex:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"sex\",\n            value: editData.sex,\n            onChange: handleEditChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"M\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"F\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: saveEditData,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: closeEditDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientGridSort, \"WYmtDWQE+ut/LwKY2lnT7Gb28D4=\", false, function () {\n  return [useTable];\n});\n_c = PatientGridSort;\nexport default PatientGridSort;\nvar _c;\n$RefreshReg$(_c, \"PatientGridSort\");","map":{"version":3,"names":["React","useEffect","useState","useTable","useSortBy","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientGridSort","_s","data","setData","loading","setLoading","error","setError","selectedPatient","setSelectedPatient","showSortMenu","setShowSortMenu","sortOption","setSortOption","isEditDialogOpen","setEditDialogOpen","editData","setEditData","familyName","givenName","sex","searchTerm","setSearchTerm","formatDate","dateString","date","Date","toLocaleDateString","fetchData","username","password","encodedCredentials","btoa","response","get","headers","Authorization","err","console","openEditDialog","patient","id","closeEditDialog","openPatientDetails","handleEditChange","e","name","value","target","saveEditData","post","status","alert","prevData","map","columns","useMemo","Header","accessor","Cell","row","parameters","original","className","onClick","children","length","fileName","_jsxFileName","lineNumber","columnNumber","hasAlarm","some","param","alarm","filteredData","searchLower","trim","toLowerCase","searchWords","split","filter","every","word","includes","birthDate","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleSortChange","columnId","desc","toggleSortBy","clearSearch","type","placeholder","onChange","headerGroup","getHeaderGroupProps","column","getHeaderProps","style","position","onMouseEnter","onMouseLeave","render","getRowProps","cells","cell","getCellProps","index","_c","$RefreshReg$"],"sources":["/Users/anoukmournard/Documents/ascom/level_4/edit_grid/src/PatientGridSort.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\nconst PatientGridSort = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedPatient, setSelectedPatient] = useState(null);\n    const [showSortMenu, setShowSortMenu] = useState(null);\n    const [sortOption, setSortOption] = useState({});\n    const [isEditDialogOpen, setEditDialogOpen] = useState(false);\n    const [editData, setEditData] = useState({\n        familyName: \"\",\n        givenName: \"\",\n        sex: \"\"\n    });\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const formatDate = (dateString) => {\n        const date = new Date(dateString);\n        return date.toLocaleDateString(\"en-GB\");\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const username = \"test\";\n            const password = \"TestMePlease!\";\n            const encodedCredentials = btoa(`${username}:${password}`);\n\n            try {\n                const response = await axios.get(\n                    \"https://mobile.digistat.it/CandidateApi/Patient/GetList\",\n                    {\n                        headers: {\n                            Authorization: `Basic ${encodedCredentials}`,\n                        },\n                    }\n                );\n                //console.log(\"Data retrieved:\", response.data);\n                setData(response.data);\n                setLoading(false);\n            } catch (err) {\n                console.error(\"Error fetching data:\", err);\n                setError(\"Unable to fetch data.\");\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const openEditDialog = (patient) => {\n        setSelectedPatient(null);\n\n        setEditData({\n            id: patient.id,\n            familyName: patient.familyName,\n            givenName: patient.givenName,\n            sex: patient.sex,\n        });\n        setEditDialogOpen(true);\n    };\n\n    const closeEditDialog = () => {\n        setEditDialogOpen(false);\n    };\n\n    const openPatientDetails = (patient) => {\n        setEditDialogOpen(false);\n\n        setSelectedPatient(patient);\n    };\n\n    const handleEditChange = (e) => {\n        const { name, value } = e.target;\n        setEditData({ ...editData, [name]: value });\n    };\n\n    const saveEditData = async () => {\n        const username = \"test\";\n        const password = \"TestMePlease!\";\n        const encodedCredentials = btoa(`${username}:${password}`);\n\n        try {\n            const response = await axios.post(\n                \"https://mobile.digistat.it/CandidateApi/Patient/Update\",\n                editData,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Basic ${encodedCredentials}`,\n                    },\n                }\n            );\n\n            if (response.status === 200) {\n                alert(\"Patient data updated successfully!\");\n                setData((prevData) =>\n                    prevData.map((patient) =>\n                        patient.id === editData.id ? { ...patient, ...editData } : patient\n                    )\n                );\n                closeEditDialog();\n            } else {\n                alert(\"Failed to update patient data.\");\n            }\n        } catch (error) {\n            console.error(\"Error updating patient data:\", error);\n            alert(\"An error occurred while updating the patient data.\");\n        }\n    };\n\n    const columns = React.useMemo(\n        () => [\n            { Header: \"Family Name\", accessor: \"familyName\" },\n            { Header: \"Given Name\", accessor: \"givenName\" },\n            {\n                Header: \"Sex\",\n                accessor: \"sex\",\n                Cell: ({ value }) => (value === \"M\" ? \"M\" : \"F\"),\n            },\n            {\n                Header: \"Birth Date\",\n                accessor: \"birthDate\",\n                Cell: ({ value }) => formatDate(value),\n            },\n            {\n                Header: \"Parameters\",\n                accessor: \"parameters\",\n                Cell: ({ row }) => {\n                    const parameters = row.original.parameters || [];\n                    return (\n                        <button\n                            className=\"parameters-button\"\n                            onClick={() => openPatientDetails(row.original)}\n                        >\n                            {parameters.length} parameters\n                        </button>\n                    );\n                },\n            },\n            {\n                Header: \"Alarm\",\n                accessor: \"alarm\",\n                Cell: ({ row }) => {\n                    const parameters = row.original.parameters || [];\n                    const hasAlarm = parameters.some((param) => param.alarm === true);\n                    return hasAlarm ? \"ðŸ”´\" : \"No alarm\";\n                },\n            },\n            {\n                Header: \"Edit\",\n                accessor: \"edit\",\n                Cell: ({ row }) => (\n                    <button\n                        className=\"parameters-button\"\n                        onClick={() => openEditDialog(row.original)}\n                    >\n                        Edit\n                    </button>\n                ),\n            },\n        ],\n        []\n    );\n\n    const filteredData = React.useMemo(() => {\n        const searchLower = searchTerm.trim().toLowerCase();\n        const searchWords = searchLower.split(\" \");\n        return data.filter((patient) => {\n            return searchWords.every((word) =>\n                patient.familyName.toLowerCase().includes(word) ||\n                patient.givenName.toLowerCase().includes(word) ||\n                formatDate(patient.birthDate).includes(word) ||\n                patient.sex.toLowerCase().includes(word)\n            );\n        });\n    }, [data, searchTerm]);\n\n    const tableInstance = useTable({ columns, data: filteredData }, useSortBy);\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n        tableInstance;\n\n    if (loading) {\n        return <p className=\"loading\">Loading data...</p>;\n    }\n\n    if (error) {\n        return <p className=\"error\">Error: {error}</p>;\n    }\n\n    const handleSortChange = (columnId, desc) => {\n        tableInstance.toggleSortBy(columnId, desc);\n        setSortOption({ columnId, desc });\n        setShowSortMenu(null);\n    };\n\n    const hasAlarm = (patient) => {\n        return patient.parameters && patient.parameters.some((param) => param.alarm === true);\n    };\n\n    const clearSearch = () => {\n        setSearchTerm(\"\");\n    };\n\n    return (\n        <div className=\"PatientGrid\">\n            <div className=\"search-bar\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search by name, or birth date\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                {searchTerm && (\n                    <button className=\"clear-button\" onClick={clearSearch}>\n                        &times;\n                    </button>\n                )}\n            </div>\n            <div className=\"table-container\">\n                <table {...getTableProps()}>\n                    <thead>\n                        {headerGroups.map((headerGroup) => (\n                            <tr key={headerGroup.id} {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column) => (\n                                    <th key={column.id} {...column.getHeaderProps()}>\n                                        <div\n                                            style={{ position: \"relative\" }}\n                                            onMouseEnter={() =>\n                                                column.id !== \"edit\" && setShowSortMenu(column.id)\n                                            }\n                                            onMouseLeave={() =>\n                                                column.id !== \"edit\" && setShowSortMenu(null)\n                                            }\n                                        >\n                                            {column.render(\"Header\")}\n                                            {showSortMenu === column.id && (\n                                                <div className=\"sort-menu show\">\n                                                    {column.id === \"sex\" && (\n                                                        <>\n                                                            <button onClick={() => handleSortChange(column.id, true)}>\n                                                                Sex M\n                                                            </button>\n                                                            <button onClick={() => handleSortChange(column.id, false)}>\n                                                                Sex F\n                                                            </button>\n                                                        </>\n                                                    )}\n                                                    {column.id === \"birthDate\" && (\n                                                        <>\n                                                            <button onClick={() => handleSortChange(column.id, true)}>\n                                                                Born earliest\n                                                            </button>\n                                                            <button onClick={() => handleSortChange(column.id, false)}>\n                                                                Born latest\n                                                            </button>\n                                                        </>\n                                                    )}\n                                                    {column.id === \"alarm\" && (\n                                                        <>\n                                                            <button onClick={() => handleSortChange(column.id, true)}>\n                                                                Alarm\n                                                            </button>\n                                                            <button onClick={() => handleSortChange(column.id, false)}>\n                                                                No alarm\n                                                            </button>\n                                                        </>\n                                                    )}\n                                                    {(column.id === \"familyName\" || column.id === \"givenName\") && (\n                                                        <>\n                                                            <button onClick={() => handleSortChange(column.id, false)}>\n                                                                Sort A-Z\n                                                            </button>\n                                                            <button onClick={() => handleSortChange(column.id, true)}>\n                                                                Sort Z-A\n                                                            </button>\n                                                        </>\n                                                    )}\n                                                    {(column.id === \"parameters\") && (\n                                                        <>\n                                                        <button onClick={() => handleSortChange(column.id, false)}>\n                                                            Sort By Asc\n                                                        </button>\n                                                        <button onClick={() => handleSortChange(column.id, true)}>\n                                                            Sort By Desc\n                                                        </button>\n                                                        </>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </div>\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {rows.length > 0 ? (\n                            rows.map((row) => {\n                                prepareRow(row);\n                                return (\n                                    <tr key={row.id} {...row.getRowProps()}>\n                                        {row.cells.map((cell) => (\n                                            <td key={cell.column.id} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                                        ))}\n                                    </tr>\n                                );\n                            })\n                        ) : (\n                            <tr>\n                                {columns.map((column, index) => (\n                                    <td key={index}>&nbsp;</td>\n                                ))}\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n\n            {selectedPatient && (\n                <div className=\"patient-details\">\n                    <h2>Patient Details</h2>\n                    <p><strong>Family Name:</strong> {selectedPatient.familyName}</p>\n                    <p><strong>Given Name:</strong> {selectedPatient.givenName}</p>\n                    <p><strong>Sex:</strong> {selectedPatient.sex}</p>\n                    <p><strong>Birth Date:</strong> {formatDate(selectedPatient.birthDate)}</p>\n\n                    <h3>Parameters</h3>\n                    <table className=\"parameters-table\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Value</th>\n                                <th>Alarm</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {selectedPatient.parameters && selectedPatient.parameters.map((param, index) => (\n                                <tr key={index}>\n                                    <td>{param.id}</td>\n                                    <td>{param.name}</td>\n                                    <td>{param.value}</td>\n                                    <td>{param.alarm ? \"ðŸ”´\" : \"No alarm\"}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                    <button className=\"closeButton\" onClick={() => setSelectedPatient(null)}>\n                        &times;\n                    </button>\n                </div>\n            )}\n\n            {isEditDialogOpen && (\n                <div className=\"patient-details\">\n                    <h2>Edit Patient</h2>\n                    <form>\n                        <label>\n                            Family Name:\n                            <input\n                                type=\"text\"\n                                name=\"familyName\"\n                                value={editData.familyName}\n                                onChange={handleEditChange}\n                            />\n                        </label>\n                        <label>\n                            Given Name:\n                            <input\n                                type=\"text\"\n                                name=\"givenName\"\n                                value={editData.givenName}\n                                onChange={handleEditChange}\n                            />\n                        </label>\n                        <label>\n                            Sex:\n                            <select name=\"sex\" value={editData.sex} onChange={handleEditChange}>\n                                <option value=\"M\">Male</option>\n                                <option value=\"F\">Female</option>\n                            </select>\n                        </label>\n                        <button type=\"button\" onClick={saveEditData}>\n                            Save\n                        </button>\n                        <button type=\"button\" onClick={closeEditDialog}>\n                            Cancel\n                        </button>\n                    </form>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PatientGridSort;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}